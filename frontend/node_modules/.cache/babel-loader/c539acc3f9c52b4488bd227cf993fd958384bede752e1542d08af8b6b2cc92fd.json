{"ast":null,"code":"var _jsxFileName = \"/Users/nida/Desktop/projects/BookReviewApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ReviewComponent from './ReviewComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [selectedBookId, setSelectedBookId] = useState(null);\n  useEffect(() => {\n    fetch('/books').then(response => response.json()).then(data => setBooks(data.books));\n  }, []);\n  const addBook = () => {\n    fetch('/books', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        author\n      })\n    }).then(response => response.json()).then(data => {\n      setBooks([...books, {\n        id: data.bookId,\n        title,\n        author\n      }]);\n      setTitle('');\n      setAuthor('');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book Review App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Author\",\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addBook,\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setSelectedBookId(book.id),\n        children: [book.title, \" by \", book.author]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), selectedBookId && /*#__PURE__*/_jsxDEV(ReviewComponent, {\n      bookId: selectedBookId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h/TvAwq1lWYGaZIJEfk0tRYbbXI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReviewComponent","jsxDEV","_jsxDEV","App","_s","books","setBooks","title","setTitle","author","setAuthor","selectedBookId","setSelectedBookId","fetch","then","response","json","data","addBook","method","headers","body","JSON","stringify","id","bookId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","book","_c","$RefreshReg$"],"sources":["/Users/nida/Desktop/projects/BookReviewApp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ReviewComponent from './ReviewComponent';\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [selectedBookId, setSelectedBookId] = useState(null);\n\n  useEffect(() => {\n    fetch('/books')\n      .then(response => response.json())\n      .then(data => setBooks(data.books));\n  }, []);\n\n  const addBook = () => {\n    fetch('/books', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ title, author }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        setBooks([...books, { id: data.bookId, title, author }]);\n        setTitle('');\n        setAuthor('');\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Book Review App</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Author\"\n          value={author}\n          onChange={e => setAuthor(e.target.value)}\n        />\n        <button onClick={addBook}>Add Book</button>\n      </div>\n      <ul>\n        {books.map(book => (\n          <li key={book.id} onClick={() => setSelectedBookId(book.id)}>\n            {book.title} by {book.author}\n          </li>\n        ))}\n      </ul>\n      {selectedBookId && <ReviewComponent bookId={selectedBookId} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,QAAQ,CAAC,CACZC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIX,QAAQ,CAACW,IAAI,CAACZ,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,OAAO,GAAGA,CAAA,KAAM;IACpBL,KAAK,CAAC,QAAQ,EAAE;MACdM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB,KAAK;QAAEE;MAAO,CAAC;IACxC,CAAC,CAAC,CACCK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZX,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAEmB,EAAE,EAAEP,IAAI,CAACQ,MAAM;QAAElB,KAAK;QAAEE;MAAO,CAAC,CAAC,CAAC;MACxDD,QAAQ,CAAC,EAAE,CAAC;MACZE,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC;EACN,CAAC;EAED,oBACER,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAAyB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB7B,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAE3B,KAAM;QACb4B,QAAQ,EAAEC,CAAC,IAAI5B,QAAQ,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACF7B,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,QAAQ;QACpBC,KAAK,EAAEzB,MAAO;QACd0B,QAAQ,EAAEC,CAAC,IAAI1B,SAAS,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACF7B,OAAA;QAAQoC,OAAO,EAAEpB,OAAQ;QAAAS,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACN7B,OAAA;MAAAyB,QAAA,EACGtB,KAAK,CAACkC,GAAG,CAACC,IAAI,iBACbtC,OAAA;QAAkBoC,OAAO,EAAEA,CAAA,KAAM1B,iBAAiB,CAAC4B,IAAI,CAAChB,EAAE,CAAE;QAAAG,QAAA,GACzDa,IAAI,CAACjC,KAAK,EAAC,MAAI,EAACiC,IAAI,CAAC/B,MAAM;MAAA,GADrB+B,IAAI,CAAChB,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACJpB,cAAc,iBAAIT,OAAA,CAACF,eAAe;MAACyB,MAAM,EAAEd;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV;AAAC3B,EAAA,CAxDQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}