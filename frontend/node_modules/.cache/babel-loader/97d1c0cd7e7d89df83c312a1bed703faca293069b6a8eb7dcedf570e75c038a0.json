{"ast":null,"code":"var _jsxFileName = \"/Users/nida/Desktop/projects/BookReviewApp/frontend/src/ReviewComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewComponent({\n  bookId\n}) {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [reviewText, setReviewText] = useState('');\n  useEffect(() => {\n    fetch(`/books/${bookId}/reviews`).then(response => response.json()).then(data => setReviews(data.reviews));\n  }, [bookId]);\n  const addReview = () => {\n    fetch('/reviews', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        book_id: bookId,\n        review: reviewText\n      })\n    }).then(response => response.json()).then(data => {\n      setReviews([...reviews, {\n        id: data.reviewId,\n        review: reviewText\n      }]);\n      setReviewText('');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: review.review\n      }, review.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Write a review\",\n      value: reviewText,\n      onChange: e => setReviewText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addReview,\n      children: \"Add Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewComponent, \"4Kg7Vrxb2r/pVr3Uw7bYxp6KFNE=\");\n_c = ReviewComponent;\nexport default ReviewComponent;\nvar _c;\n$RefreshReg$(_c, \"ReviewComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ReviewComponent","bookId","_s","reviews","setReviews","reviewText","setReviewText","fetch","then","response","json","data","addReview","method","headers","body","JSON","stringify","book_id","review","id","reviewId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/nida/Desktop/projects/BookReviewApp/frontend/src/ReviewComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ReviewComponent({ bookId }) {\n  const [reviews, setReviews] = useState([]);\n  const [reviewText, setReviewText] = useState('');\n\n  useEffect(() => {\n    fetch(`/books/${bookId}/reviews`)\n      .then(response => response.json())\n      .then(data => setReviews(data.reviews));\n  }, [bookId]);\n\n  const addReview = () => {\n    fetch('/reviews', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ book_id: bookId, review: reviewText }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        setReviews([...reviews, { id: data.reviewId, review: reviewText }]);\n        setReviewText('');\n      });\n  };\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>{review.review}</li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        placeholder=\"Write a review\"\n        value={reviewText}\n        onChange={e => setReviewText(e.target.value)}\n      />\n      <button onClick={addReview}>Add Review</button>\n    </div>\n  );\n}\n\nexport default ReviewComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,UAAUN,MAAM,UAAU,CAAC,CAC9BO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,UAAU,CAACO,IAAI,CAACR,OAAO,CAAC,CAAC;EAC3C,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtBL,KAAK,CAAC,UAAU,EAAE;MAChBM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEjB,MAAM;QAAEkB,MAAM,EAAEd;MAAW,CAAC;IAC9D,CAAC,CAAC,CACCG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZP,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;QAAEiB,EAAE,EAAET,IAAI,CAACU,QAAQ;QAAEF,MAAM,EAAEd;MAAW,CAAC,CAAC,CAAC;MACnEC,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,oBACEP,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB3B,OAAA;MAAAuB,QAAA,EACGnB,OAAO,CAACwB,GAAG,CAACR,MAAM,iBACjBpB,OAAA;QAAAuB,QAAA,EAAqBH,MAAM,CAACA;MAAM,GAAzBA,MAAM,CAACC,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL3B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAEzB,UAAW;MAClB0B,QAAQ,EAAEC,CAAC,IAAI1B,aAAa,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACF3B,OAAA;MAAQmC,OAAO,EAAEtB,SAAU;MAAAU,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACxB,EAAA,CA1CQF,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AA4CxB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}